# rentscraper/models.py

from django.db import models
from datetime import date
class RentalListing(models.Model):
    latitude = models.FloatField()
    longitude = models.FloatField()
    full_url = models.URLField(max_length=500)
    title = models.CharField(max_length=200)
    address = models.CharField(max_length=300)
    image_urls = models.TextField()
    price = models.CharField(max_length=100)
    bedrooms = models.CharField(max_length=50)
    baths = models.FloatField()
    size = models.CharField(max_length=100)
    HeatIncluded = models.BooleanField(default=False)
    HotWaterIncluded = models.BooleanField(default=False)
    CatAllowed = models.BooleanField(default=False)
    DogAllowed = models.BooleanField(default=False)
    Balcony = models.BooleanField(default=False)
    InBuildingLaundry = models.BooleanField(default=False)
    ParkingAvailable = models.BooleanField(default=False)
    GymAvailable = models.BooleanField(default=False)
    date = models.DateField(default=date.today)

    def __str__(self):
        return self.title


class TempletonListing(models.Model):
    bedrooms = models.CharField(max_length=50)
    baths = models.CharField(max_length=50)
    price = models.CharField(max_length=50)
    HeatIncluded = models.BooleanField()
    HotWaterIncluded = models.BooleanField()
    HydroIncluded = models.BooleanField()
    ParkingAvailable = models.BooleanField()
    CatAllowed = models.BooleanField()
    DogAllowed = models.BooleanField()
    GymAvailable = models.BooleanField()
    InBuildingLaundry = models.BooleanField()
    latitude = models.FloatField()
    longitude = models.FloatField()
    title = models.CharField(max_length=255)
    full_url = models.URLField()
    address = models.CharField(max_length=255)
    property_type = models.CharField(max_length=255)
    size = models.CharField(max_length=50)
    price_per_sqft = models.CharField(max_length=50)
    image_urls = models.TextField()
    date = models.DateField(default=date.today)

    def __str__(self):
        return self.title


class WestwoodListings(models.Model):
    bedrooms = models.CharField(max_length=50)
    baths = models.FloatField()
    price = models.CharField(max_length=20)
    size = models.CharField(max_length=20)
    den_included = models.BooleanField(default=False)
    parking_available = models.BooleanField(default=False)
    parking = models.CharField(max_length=100, blank=True, null=True)
    gym_available = models.BooleanField(default=False)
    heat_included = models.BooleanField(default=False)
    hot_water_included = models.BooleanField(default=False)
    latitude = models.DecimalField(max_digits=9, decimal_places=6)
    longitude = models.DecimalField(max_digits=9, decimal_places=6)
    title = models.CharField(max_length=255)
    full_url = models.URLField(max_length=200)
    address = models.CharField(max_length=255)
    property_type = models.CharField(max_length=100)
    date = models.DateField(default=date.today)
    def __str__(self):
        return self.title


class BuildingDetails(models.Model):
    name = models.CharField(max_length=255)
    builder_name = models.CharField(max_length=255, null=True, blank=True)
    status = models.CharField(max_length=50, null=True, blank=True)
    address = models.CharField(max_length=500)
    latitude = models.FloatField()
    longitude = models.FloatField()
    zone = models.CharField(max_length=50, null=True, blank=True)  # Added zone field
    number_of_floors = models.IntegerField()
    property_type = models.CharField(max_length=100)
    number_of_units = models.IntegerField()
    year_built = models.IntegerField()
    air_conditioning = models.BooleanField(default=False)
    balcony_patio = models.BooleanField(default=False)
    convenience_store = models.BooleanField(default=False)
    elevator = models.BooleanField(default=False)
    fitness_center = models.BooleanField(default=False)
    free_outdoor_parking = models.BooleanField(default=False)
    heat_included = models.BooleanField(default=False)
    laundry_facilities = models.BooleanField(default=False)
    water_included = models.BooleanField(default=False)
    parking_available = models.BooleanField(default=False)
    parking_cost = models.IntegerField(null=True, blank=True)
    parking_type = models.CharField(max_length=100, null=True, blank=True)
    walk_score = models.IntegerField(null=True, blank=True)
    transit_score = models.IntegerField(null=True, blank=True)
    bike_score = models.IntegerField(null=True, blank=True)
    nearest_police_station = models.CharField(max_length=255, null=True, blank=True)
    nearest_superstore = models.CharField(max_length=255, null=True, blank=True)
    nearest_pharmacy = models.CharField(max_length=255, null=True, blank=True)
    nearest_hospital = models.CharField(max_length=255, null=True, blank=True)
    time_to_nearest_hospital = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_police_station = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_superstore = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_pharmacy = models.CharField(max_length=50, null=True, blank=True)

    def __str__(self):
        return self.name

class FutureProperties(models.Model):
    title = models.CharField(max_length=255)
    date_of_post = models.CharField(max_length=100)
    blog_link = models.URLField(max_length=200)
    image_url = models.URLField(max_length=200)
    floors = models.CharField(max_length=50)
    units = models.CharField(max_length=50)
    cost = models.CharField(max_length=50)
    property_type = models.CharField(max_length=100)
    address = models.CharField(max_length=255)
    builder = models.CharField(max_length=2500)
    latitude = models.DecimalField(max_digits=9, decimal_places=6)
    longitude = models.DecimalField(max_digits=9, decimal_places=6)
    zone = models.CharField(max_length=100)

    def __str__(self):
        return self.title

class MasterPropertyData(models.Model):
    id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    builder_name = models.CharField(max_length=255, null=True, blank=True)
    status = models.CharField(max_length=50, null=True, blank=True)
    address = models.CharField(max_length=500)
    latitude = models.FloatField()
    longitude = models.FloatField()
    full_url = models.URLField(max_length=500)
    image_urls = models.TextField()
    heat_included = models.BooleanField(default=False)
    hot_water_included = models.BooleanField(default=False)
    cat_allowed = models.BooleanField(default=False)
    dog_allowed = models.BooleanField(default=False)
    balcony = models.BooleanField(default=False)
    in_building_laundry = models.BooleanField(default=False)
    parking_available = models.BooleanField(default=False)
    gym_available = models.BooleanField(default=False)
    price_per_month = models.CharField(max_length=100)
    bedrooms = models.CharField(max_length=50)
    baths = models.FloatField()
    size = models.CharField(max_length=100)
    building_floor_plans = models.TextField(null=True, blank=True)
    hydro_included = models.BooleanField(default=False)
    property_type = models.CharField(max_length=100)
    price_per_sqft = models.CharField(max_length=50, null=True, blank=True)
    listing_address = models.CharField(max_length=255, null=True, blank=True)
    den_included = models.BooleanField(default=False)
    parking = models.CharField(max_length=100, null=True, blank=True)
    number_of_floors = models.IntegerField(null=True, blank=True)
    number_of_units = models.IntegerField(null=True, blank=True)
    year_built = models.IntegerField(null=True, blank=True)
    air_conditioning = models.BooleanField(default=False)
    balcony_patio = models.BooleanField(default=False)
    convenience_store = models.BooleanField(default=False)
    elevator = models.BooleanField(default=False)
    free_outdoor_parking = models.BooleanField(default=False)
    laundry_facilities = models.BooleanField(default=False)
    water_included = models.BooleanField(default=False)
    parking_cost = models.IntegerField(null=True, blank=True)
    parking_type = models.CharField(max_length=100, null=True, blank=True)
    walk_score = models.IntegerField(null=True, blank=True)
    transit_score = models.IntegerField(null=True, blank=True)
    bike_score = models.IntegerField(null=True, blank=True)
    nearest_police_station = models.CharField(max_length=255, null=True, blank=True)
    nearest_superstore = models.CharField(max_length=255, null=True, blank=True)
    nearest_pharmacy = models.CharField(max_length=255, null=True, blank=True)
    nearest_hospital = models.CharField(max_length=255, null=True, blank=True)
    time_to_nearest_hospital = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_police_station = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_superstore = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_pharmacy = models.CharField(max_length=50, null=True, blank=True)
    zone = models.CharField(max_length=50, null=True, blank=True)
    date = models.DateField(null=True, blank=True)

    def __str__(self):
        return self.name

class MasterRentalData(models.Model):
    id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    builder_name = models.CharField(max_length=255, null=True, blank=True)
    status = models.CharField(max_length=50, null=True, blank=True)
    address = models.CharField(max_length=500)
    latitude = models.FloatField()
    longitude = models.FloatField()
    full_url = models.URLField(max_length=500)
    image_urls = models.TextField()
    heat_included = models.BooleanField(default=False)
    hot_water_included = models.BooleanField(default=False)
    cat_allowed = models.BooleanField(default=False)
    dog_allowed = models.BooleanField(default=False)
    balcony = models.BooleanField(default=False)
    in_building_laundry = models.BooleanField(default=False)
    parking_available = models.BooleanField(default=False)
    gym_available = models.BooleanField(default=False)
    price_per_month = models.CharField(max_length=100)
    bedrooms = models.CharField(max_length=50)
    baths = models.FloatField()
    size = models.CharField(max_length=100)
    building_floor_plans = models.TextField(null=True, blank=True)
    hydro_included = models.BooleanField(default=False)
    property_type = models.CharField(max_length=100)
    price_per_sqft = models.CharField(max_length=50, null=True, blank=True)
    listing_address = models.CharField(max_length=255, null=True, blank=True)
    den_included = models.BooleanField(default=False)
    parking = models.CharField(max_length=100, null=True, blank=True)
    number_of_floors = models.IntegerField(null=True, blank=True)
    number_of_units = models.IntegerField(null=True, blank=True)
    year_built = models.IntegerField(null=True, blank=True)
    air_conditioning = models.BooleanField(default=False)
    balcony_patio = models.BooleanField(default=False)
    convenience_store = models.BooleanField(default=False)
    elevator = models.BooleanField(default=False)
    free_outdoor_parking = models.BooleanField(default=False)
    laundry_facilities = models.BooleanField(default=False)
    water_included = models.BooleanField(default=False)
    parking_cost = models.IntegerField(null=True, blank=True)
    parking_type = models.CharField(max_length=100, null=True, blank=True)
    walk_score = models.IntegerField(null=True, blank=True)
    transit_score = models.IntegerField(null=True, blank=True)
    bike_score = models.IntegerField(null=True, blank=True)
    nearest_police_station = models.CharField(max_length=255, null=True, blank=True)
    nearest_superstore = models.CharField(max_length=255, null=True, blank=True)
    nearest_pharmacy = models.CharField(max_length=255, null=True, blank=True)
    nearest_hospital = models.CharField(max_length=255, null=True, blank=True)
    time_to_nearest_hospital = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_police_station = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_superstore = models.CharField(max_length=50, null=True, blank=True)
    time_to_nearest_pharmacy = models.CharField(max_length=50, null=True, blank=True)
    zone = models.CharField(max_length=50, null=True, blank=True)
    date = models.DateField(null=True, blank=True)

    def __str__(self):
        return self.name